name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller==6.10.*

      - name: Build with PyInstaller
        run: pyinstaller "YT-DLP GUI.spec"

      - name: Download yt-dlp.exe
        shell: pwsh
        run: |
          $ProgressPreference='SilentlyContinue'
          New-Item -ItemType Directory -Force -Path dist/bin | Out-Null
          Invoke-WebRequest -Uri https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.exe -OutFile dist/bin/yt-dlp.exe

      - name: Download ffmpeg.exe
        shell: pwsh
        run: |
          $ProgressPreference='SilentlyContinue'
          $zip = "$env:RUNNER_TEMP/ffmpeg.zip"
          Invoke-WebRequest -Uri https://github.com/BtbN/FFmpeg-Builds/releases/latest/download/ffmpeg-master-latest-win64-gpl.zip -OutFile $zip
          Expand-Archive -Path $zip -DestinationPath "$env:RUNNER_TEMP/ffmpeg" -Force
          $ff = Get-ChildItem -Path "$env:RUNNER_TEMP/ffmpeg" -Filter ffmpeg.exe -Recurse | Select-Object -First 1
          Copy-Item $ff.FullName -Destination "dist/ffmpeg.exe"

      - name: Prepare artifacts
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path artifacts | Out-Null
          Copy-Item "dist/YT-DLP GUI.exe" "artifacts/YT-DLP_GUI.exe" -Force
          Compress-Archive -Path "dist/YT-DLP GUI.exe","dist/ffmpeg.exe","dist/bin","dist/config.json" -DestinationPath "artifacts/YT-DLP_GUI_portable_${env:GITHUB_REF_NAME}.zip" -Force

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: artifacts/*
          if-no-files-found: error

  release:
    runs-on: ubuntu-latest
    needs: build-windows
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-artifacts
          path: artifacts

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*
          make_latest: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
